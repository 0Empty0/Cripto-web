const headerBanner=document.querySelector(".header__banner"),headerBannerButton=document.querySelector(".header__button.close"),sidebarButton=document.querySelector(".header__burger"),sidebar=document.querySelector(".sidebar");headerBanner.addEventListener("click",()=>{headerBanner.remove();const e=document.querySelector("header").getBoundingClientRect().height;sidebar.style.top=e+"px"}),sidebarButton.addEventListener("click",()=>{if(sidebar.classList.contains("active"))setTimeout(()=>{sidebar.style.top=0},300);else{const e=document.querySelector("header").getBoundingClientRect().height;sidebar.style.top=e+"px"}sidebar.classList.toggle("active")});const dropDownButtons=document.querySelectorAll(".dropdown__wrapper");for(const e of dropDownButtons)e.addEventListener("click",()=>{e.classList.toggle("active")});window.onclick=e=>{if(!e.target.matches(".dropdown__wrapper")&&!e.target.matches(".dropdown__button"))for(const e of dropDownButtons)e.classList.contains("active")&&e.classList.remove("active")};const imagesScroll=document.querySelectorAll(".buy-token__img"),animateMainCard=document.querySelectorAll(".animate-main-card"),animateMetricData=document.querySelectorAll(".metric-data-animate"),stakeMidasData=document.querySelectorAll(".stake-midas__list-title span"),animateMetricCalendar=document.querySelectorAll(".midas-token__calendar div"),animateGridTable=document.querySelector(".midas-token__points"),animateLight=document.querySelector(".midas-token__light"),animateSupportData=document.querySelectorAll(".support__data"),formatNumber=(e,t,a)=>{let n;return!isNaN(parseFloat(e))&&isFinite(e)?(e=Number(e),n=(e=(void 0!==t?e.toFixed(t):e).toString()).split("."),n[0]=n[0].toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1"+(a||",")),n.join(".")):NaN};let isDoOnceMetricDataCounter=!1;const animateMetricDataHandler=()=>{isDoOnceMetricDataCounter||(isDoOnceMetricDataCounter=!0,animateMetricData.forEach(e=>{const t=()=>{const a=+e.getAttribute("data-number"),n=+e.innerText,r=a/200;if(n<a)e.innerText=Math.ceil(n+r),setTimeout(t,1);else{const t=e.getAttribute("data-after");e.innerText=t?formatNumber(a,0,"")+t:formatNumber(a,0,"")}};t()}))};let isDoOnceStakeCounter=!1;const animateStakeHandler=()=>{isDoOnceStakeCounter||(isDoOnceStakeCounter=!0,stakeMidasData.forEach(e=>{const t=()=>{const a=+e.getAttribute("data-number"),n=+e.innerText,r=a/50;if(n<a)e.innerText=Math.ceil(n+r),setTimeout(t,1);else{const t=e.getAttribute("data-after");e.innerText=t?formatNumber(a,0,"")+t:formatNumber(a,0,"")}};t()}))};let isDoOnceSupportCounter=!1;const animateSupportHandler=()=>{isDoOnceSupportCounter||(isDoOnceSupportCounter=!0,animateSupportData.forEach(e=>{const t=()=>{const a=+e.getAttribute("data-number"),n=+e.innerText,r=a/100;if(n<a)e.innerText=Math.ceil(n+r),setTimeout(t,1);else{const t=e.getAttribute("data-after");e.innerText=t?formatNumber(a,0,"")+t:formatNumber(a,0,"")}};t()}))};window.addEventListener("scroll",()=>{let e,t=window.innerHeight;for(let e=0;e<animateMainCard.length;e++){animateMainCard[e].getBoundingClientRect().top<t-150&&(anime({targets:".card__main.graph span",opacity:1,delay:anime.stagger(100)}),setTimeout(()=>{document.querySelector(".card__toggle").classList.add("active")},1e3),setTimeout(()=>{document.querySelector(".card__graph").classList.add("active")},1e3))}e=animateMetricData[1].getBoundingClientRect().top,e<t-150&&(isDoOnceMetricDataCounter||(isDoOnceMetricDataCounter=!0,animateMetricData.forEach(e=>{const t=()=>{const a=+e.getAttribute("data-number"),n=+e.innerText,r=a/200;if(n<a)e.innerText=Math.ceil(n+r),setTimeout(t,1);else{const t=e.getAttribute("data-after");e.innerText=t?formatNumber(a,0,"")+t:formatNumber(a,0,"")}};t()}))),e=stakeMidasData[0].getBoundingClientRect().top,e<t-150&&(isDoOnceStakeCounter||(isDoOnceStakeCounter=!0,stakeMidasData.forEach(e=>{const t=()=>{const a=+e.getAttribute("data-number"),n=+e.innerText,r=a/50;if(n<a)e.innerText=Math.ceil(n+r),setTimeout(t,1);else{const t=e.getAttribute("data-after");e.innerText=t?formatNumber(a,0,"")+t:formatNumber(a,0,"")}};t()}))),e=animateMetricCalendar[0].getBoundingClientRect().top,e<t-150&&anime({targets:".midas-token__calendar div",height:260,delay:anime.stagger(100),easing:"spring(1, 80, 10, 0)"}),e=animateGridTable.getBoundingClientRect().top,e<t-150&&anime({targets:".midas-token__points svg circle",r:[{value:8,easing:"easeOutSine",duration:500}],delay:anime.stagger(100,{grid:[15,10],from:"center"})}),e=animateLight.getBoundingClientRect().top,e<t-150&&(anime({targets:".midas-token__light .top svg circle",opacity:1,delay:anime.stagger(150)}),anime({targets:".midas-token__light .bottom svg circle",opacity:1,delay:anime.stagger(150)}),anime({targets:".midas-token__light .left svg circle",opacity:1,delay:anime.stagger(150)}),anime({targets:".midas-token__light .right svg circle",opacity:1,delay:anime.stagger(150)})),e=animateSupportData[0].getBoundingClientRect().top,e<t-150&&(isDoOnceSupportCounter||(isDoOnceSupportCounter=!0,animateSupportData.forEach(e=>{const t=()=>{const a=+e.getAttribute("data-number"),n=+e.innerText,r=a/100;if(n<a)e.innerText=Math.ceil(n+r),setTimeout(t,1);else{const t=e.getAttribute("data-after");e.innerText=t?formatNumber(a,0,"")+t:formatNumber(a,0,"")}};t()})));for(let e=0;e<imagesScroll.length;e++){let t=window.scrollY/document.body.scrollHeight;imagesScroll[e].style.top=imagesScroll[e].getBoundingClientRect().y*t*.75+"px"}});const accordions=document.getElementsByClassName("accordion");for(const e of accordions)e.addEventListener("click",t=>{const{target:a}=t;a.classList.toggle("active"),e.parentElement.classList.toggle("active");const n=a.nextElementSibling;n.style.maxHeight=n.style.maxHeight?null:n.scrollHeight+"px"});
//# sourceMappingURL=../sourcemaps/main.min.js.map
